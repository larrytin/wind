snapshot
[
[7,"gde23jpazhfqiy50e",1],			//	CollaborativeList
[7,"root",0],
[7,"gdeohwe75hfgyjlp6",2],			//	CollaborativeString
[7,"gde6p4dfvhfip5ozq","DemoMovie"],
[7,"gdegspwishfkqk981",0],			//	CollaborativeMap
[7,"gdey3qrl5hga4jx7g",4],			//	IndexReference

[5,"gde23jpazhfqiy50e",0,			
	[0,
		[21,"Cat"],[21,"Dog"],[21,"Sheep"],[21,"Chicken"],[2,"gde23jpazhfqiy50e"]
	]
],
[5,"gdeohwe75hfgyjlp6",0,
	[1,"Edit Me!"]
],

[8,"root","demo_map",
	[2,"gdegspwishfkqk981"]
],
[8,"root","demo_custom",
	[2,"gde6p4dfvhfip5ozq"]
],
[8,"root","demo_list",
	[2,"gde23jpazhfqiy50e"]
],
[8,"root","demo_string",
	[2,"gdeohwe75hfgyjlp6"]
],

[8,"gde6p4dfvhfip5ozq","name",[21,"Kung Fu Hustle"]],
[8,"gde6p4dfvhfip5ozq","rating",[21,""]],
[8,"gde6p4dfvhfip5ozq","notes",[21,""]],
[8,"gde6p4dfvhfip5ozq","director",[21,"Stephen Chow"]],

[8,"gdegspwishfkqk981","Key 3",[21,{"k":"v"}]],
[8,"gdegspwishfkqk981","Key 4",[2,"gdegspwishfkqk981"]],
[8,"gdegspwishfkqk981","Key 1",[21,"Value 1"]],
[8,"gdegspwishfkqk981","Key 2",[21,"Value 2"]]
[25,"gdey3qrl5hga4jx7g","gde3x7bjuhgcwf4bo",2,true,2]
]

str.insertString(3, 'cool')
[[4,[0,
	[4,[0,
		[5,"gdeohwe75hfgyjlp6",3,[1,"cool"]]
	]]
]]]
mod.beginCompoundOperation('CompoundOperation');str.insertString(1, 'abc');str.removeRange(1,4);mod.endCompoundOperation();
[[4,[0,
	[4,[0,
		[5,"gdea8kojqhgf8w8no",1,[1,"abc"]]]],
	[4,[0,
		[6,"gdea8kojqhgf8w8no",1,3]
	]]
],"CompoundOperation"]]
str.removeRange(3, 4)
[[4,[0,
	[4,[0,
		[6,"gdeohwe75hfgyjlp6",3,1]
	]]
]]]
mod.createString()
[[4,[0,
	[7,"gdehjsjv0hfsq03gw",2]
],"initialize"]]
mod.createString('abcde')
[[4,[0,
	[7,"gdevdazwshfnxswym",2],[5,"gdevdazwshfnxswym",0,[1,"abcde"]]
],"initialize"]]
str.registerReference(2, true)
[[4,[0,
	[7,"gdey3qrl5hga4jx7g",4],[25,"gdey3qrl5hga4jx7g","gde3x7bjuhgcwf4bo",2,true,-1]
],"initialize"]]

map.delete('Key 4')
[[4,[0,
	[8,"gdegspwishfkqk981","Key 4"]
]]]
map.set('Key 4', [null])
[[4,[0,
	[8,"gdegspwishfkqk981","Key 4",[21,[null]]]
]]]
map.set('Key 4', list)
[[4,[0,
	[8,"gdegspwishfkqk981","Key 4",[2,"gde23jpazhfqiy50e"]]]
]]
mod.createMap()
[[4,[0,
	[7,"gdeyyzcrahfo9uykv",0]
],"initialize"]]

list.removeRange(4, 7)
[[4,[0,
	[6,"gde23jpazhfqiy50e",4,3]
]]]
list.push(null)
[[4,[0,
	[5,"gde23jpazhfqiy50e",4,[0,null]]
]]]
list.insertAll(4, [true, string])
[[4,[0,
	[5,"gde23jpazhfqiy50e",4,[0,[21,true],[2,"gdeohwe75hfgyjlp6"]]]
]]]
list.set(4, 'abc')
[[4,[0,
	[11,"gde23jpazhfqiy50e",4,[0,[21,"abc"]]]
]]]
list.replaceRange(2, [null,4])
[[4,[0,
	[11,"gdem91atjhfhgs9wt",2,[0,null,[21,4]]]
]]]
list.length = 3
[[4,[0,[6,"gdem91atjhfhgs9wt",3,2]]]]
mod.createList()
[[4,[0,
	[7,"gdel70pe9hfho6s6n",1]
],"initialize"]]






[[4,[0,
	[7,"root",0],[7,"gdea8kojqhgf8w8no",2],[5,"gdea8kojqhgf8w8no",0,[1,"Edit Me!"]],[8,"root","demo_string",[2,"gdea8kojqhgf8w8no"]],[7,"gdem91atjhfhgs9wt",1],[5,"gdem91atjhfhgs9wt",0,[0,[21,"Cat"],[21,"Dog"],[21,"Sheep"],[21,"Chicken"]]],[8,"root","demo_list",[2,"gdem91atjhfhgs9wt"]],[7,"gdepghuphhg8br3do",0],[8,"gdepghuphhg8br3do","Key 1",[21,"Value 1"]],[8,"gdepghuphhg8br3do","Key 2",[21,"Value 2"]],[8,"gdepghuphhg8br3do","Key 3",[21,"Value 3"]],[8,"gdepghuphhg8br3do","Key 4",[21,"Value 4"]],[8,"gdepghuphhg8br3do","Key 1",[21,"Value 1"]],[8,"gdepghuphhg8br3do","Key 2",[21,"Value 2"]],[8,"gdepghuphhg8br3do","Key 3",[21,"Value 3"]],[8,"gdepghuphhg8br3do","Key 4",[21,"Value 4"]],[8,"root","demo_map",[2,"gdepghuphhg8br3do"]],[7,"gdeql5gwzhfveo0ck","DemoMovie"],[8,"gdeql5gwzhfveo0ck","name",[21,"Kung Fu Hustle"]],[8,"gdeql5gwzhfveo0ck","director",[21,"Stephen Chow"]],[8,"gdeql5gwzhfveo0ck","notes",[21,""]],[8,"gdeql5gwzhfveo0ck","rating",[21,""]],[8,"root","demo_custom",[2,"gdeql5gwzhfveo0ck"]]
],null,true]]



doc = rtpg.realtimeDoc;
mod = doc.getModel();
root = mod.getRoot();
map = root.get('demo_map');
list = root.get('demo_list');
str = root.get('demo_string');
displayObjectChangedEvent = function (evt) {
  window.e = evt;
  events = evt.events;
  var eventCount = evt.events.length;
  console.log('start: '+ eventCount);
  for (var i = 0; i < eventCount; i++) {
    console.log('Event type: '  + events[i].type);
    console.log('Local event: ' + events[i].isLocal);
    console.log('User ID: '     + events[i].userId);
    console.log('Session ID: '  + events[i].sessionId);
  }
  console.log('end');
}
displayReferenceShiftedEvent = function (evt) {
  console.log('displayReferenceShiftedEvent isLocal:' + evt.isLocal + ' oldIndex:' + evt.oldIndex + ' newIndex:' + evt.newIndex);
}
root.addEventListener(gapi.drive.realtime.EventType.OBJECT_CHANGED, displayObjectChangedEvent)
root.removeEventListener(gapi.drive.realtime.EventType.OBJECT_CHANGED,displayObjectChangedEvent)
r.addEventListener(gapi.drive.realtime.EventType.REFERENCE_SHIFTED, displayReferenceShiftedEvent)

onFileLoaded = function(doc){
  window.doc2 = doc;
  console.log('onFileLoaded');
  mod = doc.getModel();
  console.log(mod.a.a.getAllObjects().toString());
  console.log(mod.getRoot().toString());
}
initializeModel = function(mod){
  console.log('initializeModel');
  console.log(mod.a.a.getAllObjects().toString());
  console.log(mod.getRoot().toString());
}

displayObjectChangedEvent = function (evt) {
  window.e = evt;
  events = evt.events;
  var eventCount = evt.events.length;
  console.log('start: '+ eventCount);
  for (var i = 0; i < eventCount; i++) {
    console.log('Event type: '  + events[i].type);
    console.log('Local event: ' + events[i].isLocal);
    console.log('User ID: '     + events[i].userId);
    console.log('Session ID: '  + events[i].sessionId);
  }
  console.log('end');
}
gdr.load('', function(doc){window.doc = doc;})
mod = doc.getModel()
str = mod.createString('ab')
str.addObjectChangedListener(displayObjectChangedEvent)
str.append('d')
